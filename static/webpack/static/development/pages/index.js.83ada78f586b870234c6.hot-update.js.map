{"version":3,"file":"static/webpack/static/development/pages/index.js.83ada78f586b870234c6.hot-update.js","sources":["webpack:///./components/HomeLayout/index.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n/* Emerald */\nimport Avatar from \"emerald-ui/lib/Avatar\";\n/* Styles */\nimport \"./style.scss\";\n\nfunction HomeLayout({ images }) {\n  const rows = getRows(images);\n\n  return (\n    <div id=\"HomeLayout\">\n      <h1 className=\"bold\">Our Team</h1>\n      <p className=\"bold\">\n        These are the people living the \"Junior developer for life\" way\n      </p>\n      <div>{rows}</div>\n\n      <svg height={0} width={0}>\n        <defs>\n          <clipPath id=\"svgPath\">\n            <path d=\"M 250 5 Q 100 0 105 5 L 195 250 Q 200 100 195 105 L 105 195 Q 100 200 250 195 L 5 105 Q 0 100 5 250 Z\" />\n          </clipPath>\n        </defs>\n      </svg>\n    </div>\n  );\n}\n\n/**\n * Return the images in rows with 3 or 4 avatars\n * @param {Array} images\n */\nfunction getRows(images) {\n  let rows = [],\n    row = [];\n  let count = 0,\n    aux = 3;\n\n  for (let i = 0; i < images.length; i++) {\n    count++;\n    if (count <= aux) {\n      row.push(\n        <img\n          key={`avatar-${i}`}\n          className=\"avatar\"\n          src={images[i].images.thumbnail.url}\n        />\n      );\n    } else {\n      rows.push(\n        <div key={`row-${i}`} className=\"row\">\n          {row}\n        </div>\n      );\n      aux = aux === 3 ? 4 : 3;\n      count = 0;\n      row = [];\n    }\n  }\n\n  return rows;\n}\n\nHomeLayout.propTypes = {\n  images: PropTypes.array.isRequired\n};\n\nexport default HomeLayout;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;;;AAIA;AACA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}